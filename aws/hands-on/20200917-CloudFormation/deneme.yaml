AWSTemplateFormatVersion: 2010-09-09
Description: |
  Experience template.  
Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VpcId of your existing Virtual Private Cloud (VPC)
  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: The list of SubnetIds in your Virtual Private Cloud (VPC)
  KeyName:
    Description: The EC2 Key Pair to allow SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
    
Resources:

  myASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: myASG
      AvailabilityZones: !GetAZs
      Cooldown: 250
      DesiredCapacity: 2
      HealthCheckGracePeriod: 300
      HealthCheckType: ELB 
      LaunchTemplate:
        LaunchTemplateName: !Ref myLaunchTemplate
        Version: !GetAtt myLaunchTemplate.LatestVersionNumber
      MaxSize: '4' #required
      MinSize: '1' #required
      TargetGroupARNs:
        - !Ref myALBTargetGrp
      TerminationPolicies: OldestInstance
                                
  myLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: myLaunchTemplate
      LaunchTemplateData: 
        CreditSpecification: 
          CpuCredits: standard
        DisableApiTermination: false
        ImageId: ami-047a51fa27710816e
        InstanceType: t2.micro
        KeyName: !Ref KeyName
        SecurityGroupIds: 
          - !GetAtt mySecGrp.GroupId
        SecurityGroups: 
          - !Ref mySecGrp
        UserData: !Base64 |
            #!/bin/bash
            yum update -y
            yum install -y httpd
            TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"` \
            && PRIVATE_IP=`curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/local-ipv4`
            TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"` \
            && PUBLIC_IP=`curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/public-ipv4` 
            DATE_TIME=`date`
            chmod -R 777 /var/www/html
            echo "<html>
            <head>
                <title> Congratulations! You have created an instance from Launch Configuration</title>
            </head>
            <body>
                <h1>This web server is launched from launch configuration by NECÄ°P</h1>
                <p>This instance is created at <b>$DATE_TIME</b></p>
                <p>Private IP address of this instance is <b>$PRIVATE_IP</b></p>
                <p>Public IP address of this instance is <b>$PUBLIC_IP</b></p>
            </body>
            </html>" > /var/www/html/index.html
            systemctl start httpd
            systemctl enable httpd

  myPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref myASG #required
      Cooldown: 250
      PolicyType: SimpleScaling
      ScalingAdjustment: 1
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
      
  myALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Name: MYELB
      Scheme: internet-facing
      SecurityGroups:
        - !GetAtt mySecGrp.GroupId
      Subnets: !Ref Subnets
      Type: application

  myListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions: #required
        - TargetGroupArn: !Ref myALBTargetGrp
          Type: forward
      LoadBalancerArn: !Ref myALB #required
      Port: 80
      Protocol: HTTP
      

  myALBTargetGrp:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 20
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 3
      Name: myALBTargetGrp
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 2
      VpcId: !Ref VpcId

  mySecGrp:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: enable SSH and HTTP #required
      GroupName: mySecGrp
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: SSH
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
        - CidrIp: 0.0.0.0/0
          Description: HTTP
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
  
Outputs:
  URL:
    Description: The URL of the website
    Value: !Join 
      - ''
      - - 'http://'
        - !GetAtt myALB.DNSName